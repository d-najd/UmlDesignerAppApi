"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.interpolationSafeWindowsPath = exports.toPosixPath = exports.replaceWithWindowsPathIfNeeded = exports.getRepoRootDir = void 0;
const path_1 = require("path");
/** Get (or at least use a best attempt) to get the current package's absolute path. */
function getRepoRootDir() {
    return __dirname.replace(/(?:src|node_modules\/augment-vir|dist).*/, '');
}
exports.getRepoRootDir = getRepoRootDir;
/** Convert a given path to a windows path if the current system doesn't use `/`. */
function replaceWithWindowsPathIfNeeded(input) {
    if (path_1.sep === '/') {
        return input;
    }
    else {
        return input.replace(/\//g, path_1.sep);
    }
}
exports.replaceWithWindowsPathIfNeeded = replaceWithWindowsPathIfNeeded;
/** Convert a Windows path to a posix path. */
function toPosixPath(maybeWindowsPath) {
    return maybeWindowsPath
        .replace(/^(.+?)\:\\+/, (match, captureGroup) => {
        return `/${captureGroup.toLowerCase()}/`;
    })
        .replace(/\\+/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * Use this to interpolate paths into bash commands. If the given path is not a window path, the
 * path structure will not be modified.
 */
function interpolationSafeWindowsPath(input) {
    return input.replace(/\\/g, '\\\\\\\\');
}
exports.interpolationSafeWindowsPath = interpolationSafeWindowsPath;
