/**
 * Join elements into a string with commas separating each value. Add a conjunction before the final
 * item in the list. If the array has a length < 2, the conjunction is not added. If the list is
 * only of length 2, then no commas are added.
 *
 * @param list Array of items to be converted into strings. Works best if these are simply strings
 *   to begin with.
 * @param conjunction Defaults to 'and'. The conjunction to be used before the final element.
 */
export declare function joinWithFinalConjunction<T>(list: T[], conjunction?: string): string;
export declare function removeAnsiEscapeCodes(input: string): string;
export declare const removeColor: typeof removeAnsiEscapeCodes;
export declare function removeCommasFromNumberString(numberString: string): string;
/** Collapse all consecutive white space into just one space and trim surrounding whitespace. */
export declare function collapseWhiteSpace(input: string): string;
/** Same as String.prototype.split but includes the delimiter to split by in the output array. */
export declare function splitIncludeSplit(original: string, splitterInput: string | RegExp, caseSensitive: boolean): string[];
export declare type CasingOptions = {
    capitalizeFirstLetter: boolean;
};
export declare function capitalizeFirstLetter(input: string): string;
export declare function kebabCaseToCamelCase(rawKebabCase: string, casingOptions?: Partial<CasingOptions> | undefined): string;
export declare function camelCaseToKebabCase(rawCamelCase: string): string;
export declare function replaceStringAtIndex(originalString: string, start: number, newString: string, length?: number): string;
/**
 * Escapes characters from the given string so that it can be used within a RegExp without being
 * parsed as RegExp syntax.
 */
export declare function escapeStringForRegExp(input: string): string;
export declare function getAllIndexesOf(searchIn: string, searchForInput: string | RegExp, caseSensitive: boolean, includeLength: true): {
    index: number;
    length: number;
}[];
export declare function getAllIndexesOf(searchIn: string, searchForInput: string | RegExp, caseSensitive: boolean, includeLength?: false | undefined): number[];
export declare function randomString(inputLength?: number): string;
